// <auto-generated />
using System;
using AsianMarketplace_WebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AsianMarketplace_WebAPI.Migrations
{
    [DbContext(typeof(AsianMarketplaceDbContext))]
    partial class AsianMarketplaceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.CartItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("UserId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("UserID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "UserId")
                        .HasName("PK__CartItem__A3060F2106CCBB11");

                    b.HasIndex("UserId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ImageURL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryName")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("ItemId");

                    b.HasIndex("SubCategoryName");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("OrderId");

                    b.HasIndex("Username");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.OrderItem", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("OrderID");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemId", "OrderId")
                        .HasName("PK__OrderIte__9E478651E5C85267");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Shopper", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Username")
                        .HasName("PK__Shopper__536C85E55B620307");

                    b.ToTable("Shopper", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.ShoppingList", b =>
                {
                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("UserID");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength();

                    b.HasKey("Title", "UserId")
                        .HasName("PK__Shopping__FDCEE8177E466141");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingList", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.ShoppingListItem", b =>
                {
                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("UserID");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("IsCrossedOff")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasDefaultValueSql("('N')")
                        .IsFixedLength();

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Title", "UserId", "ItemId")
                        .HasName("PK__Shopping__17BC9694005304B1");

                    b.HasIndex("ItemId");

                    b.ToTable("ShoppingListItem", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.SubCategory", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Name")
                        .HasName("PK__SubCateg__737584F73EE87B95");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory", (string)null);
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.CartItem", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.Item", "Item")
                        .WithMany("CartItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("CartItem_ItemID_FK");

                    b.HasOne("AsianMarketplace_WebAPI.Models.Shopper", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("CartItem_UserID_FK");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Item", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.SubCategory", "SubCategoryNameNavigation")
                        .WithMany("Items")
                        .HasForeignKey("SubCategoryName")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("SubCategory_FK");

                    b.Navigation("SubCategoryNameNavigation");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Order", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.Shopper", "UsernameNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("Username")
                        .IsRequired()
                        .HasConstraintName("Shopper_FK");

                    b.Navigation("UsernameNavigation");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.OrderItem", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.Item", "Item")
                        .WithMany("OrderItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("OrderItem_ItemID_FK");

                    b.HasOne("AsianMarketplace_WebAPI.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("OrderItem_OrderID_FK");

                    b.Navigation("Item");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.ShoppingList", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.Shopper", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ShoppingList_UserID_FK");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.ShoppingListItem", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.Item", "Item")
                        .WithMany("ShoppingListItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ShoppingListItem_Item_FK");

                    b.HasOne("AsianMarketplace_WebAPI.Models.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListItems")
                        .HasForeignKey("Title", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("ShoppingListItem_ShoppingList_FK");

                    b.Navigation("Item");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.SubCategory", b =>
                {
                    b.HasOne("AsianMarketplace_WebAPI.Models.Category", null)
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Item", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("ShoppingListItems");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.Shopper", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");

                    b.Navigation("ShoppingLists");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListItems");
                });

            modelBuilder.Entity("AsianMarketplace_WebAPI.Models.SubCategory", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
